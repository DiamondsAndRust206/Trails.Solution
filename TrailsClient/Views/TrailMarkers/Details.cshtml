@model TrailsClient.Models.TrailMarker

<!-- @* <h1>Trailmarker Info:</h1>
<ul>
    <li>ID: @Model.TrailMarkerId</li>
    <li>Name: @Model.Name</li>
    <li>Longitude: @Model.Longitude</li>
    <li>Latitude: @Model.Latitude</li>
    <li>Trailhead?: @Model.isTrailhead</li>
    <li>Landmark?: @Model.isLandmark</li>
    <li>Description: @Model.Description</li>
</ul>
<br>

<div id="viewDiv"></div>

@section Scripts
{
    <style>
          html,
          body,
          #viewDiv {
            padding: 0;
            margin: 0;
            height: 88vh;
            width: 99vw;
          }
        </style>
    <link rel="stylesheet" href="https://js.arcgis.com/4.18/esri/themes/light/main.css"/>
    <script src="https://js.arcgis.com/4.18/"></script>
    <script>
        require(["esri/Map", "esri/views/MapView"], function (Map, MapView) {
            var map = new Map({
                basemap: "topo-vector"
            });
            var view = new MapView({
                container: "viewDiv", // Reference to the view div created in step 5
                map: map, // Reference to the map object created before the view
                zoom: 15, // Sets zoom level based on level of detail (LOD)
                center: [@Model.Longitude, @Model.Latitude] // Sets center point of view using longitude,latitude
            });
        });
    </script>
}

<a href="/TrailMarkers/Edit/@(Model.TrailMarkerId)"><p>Edit</p></a>
<br>

<a href="/TrailMarkers"><p>Return</p></a>

<a href="/TrailMarkers/Delete/@(Model.TrailMarkerId)"><p>DELETE Trailmarker</p></a> *@ -->

<div id="viewDiv"></div>

  @section Scripts
  {
  
    <style>
        html,
        body,
        #viewDiv {
          padding: 0;
            margin: 0;
            height: 88vh;
            width: 99vw;
        }
      </style>
      
    <link rel="stylesheet" href="https://js.arcgis.com/4.24/esri/themes/light/main.css">
    <script src="https://js.arcgis.com/4.24/"></script>

    <script>
      require(["esri/config","esri/Map", "esri/views/MapView", "esri/Graphic", "esri/layers/GraphicsLayer"], function (esriConfig, Map, MapView, Graphic, GraphicsLayer) {

        esriConfig.apiKey = "AAPK7691fadea68d4c688c09d108d1cd1d7cSxgmrGZq1iMecdeWEN29tO3QCLIzXUFXyg4PLvxYtshTAFhyxYK6D4d2m-vnNbrK";

        const map = new Map({
          basemap: "arcgis-topographic" // Basemap layer service
        });

        const view = new MapView({
          map: map,
          center: [@Model.Longitude, @Model.Latitude], // Longitude, latitude
          zoom: 16, // Zoom level
          container: "viewDiv" // Div element
        });

        const graphicsLayer = new GraphicsLayer();
        map.add(graphicsLayer);

        //add point at coordinates
        const point = { //Create a point
        type: "point",
        longitude: @Model.Longitude,
        latitude: @Model.Latitude
        };
        
        //style point marker
        const simpleMarkerSymbol = {
          type: "simple-marker",
          color: [226, 119, 40],  // Orange
          outline: {
            color: [255, 255, 255], // White
            width: 1
          }
        };
        const pointGraphic = new Graphic({
          geometry: point,
          symbol: simpleMarkerSymbol
        });
          graphicsLayer.add(pointGraphic);
        });
        </script>
  }